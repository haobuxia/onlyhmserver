<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianyi.helmet.server.dao.file.TagDao">

    <resultMap id="BaseResultMap" type="com.tianyi.helmet.server.entity.file.Tag">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="tagName" property="tagName" jdbcType="VARCHAR"/>
        <result column="groupId" property="groupId" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
		id, createTime,tagName,groupId
	</sql>
    <sql id="Base_Column_List_NoId">
		 createTime,tagName,groupId
	</sql>
    <sql id="conditions">
        <where>
            <if test="tagName != null and tagName != ''">
                and tagName = #{tagName}
            </if>
            <if test="tagNameNotStart != null and tagNameNotStart != ''">
                and tagName not like concat(#{tagNameNotStart},'%')
            </if>
            <if test="groupId != null">
                and groupId = #{groupId}
            </if>
            <if test="groupId1 != null">
                and groupId &gt;= #{groupId1}
            </if>
            <if test="groupId2 != null">
                and groupId &lt;= #{groupId2}
            </if>
            <if test="createTime != null ">
                and createTime = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="createTime1 != null ">
                and createTime &gt;= #{createTime1,jdbcType=TIMESTAMP}
            </if>
            <if test="createTime2 != null ">
                and createTime &lt;= #{createTime2,jdbcType=TIMESTAMP}
            </if>
            <if test="keyword != null and keyword != '' ">
                and tagName like concat('%',#{keyword},'%')
            </if>
            <if test="idList != null and idList.size > 0 ">
                and id IN
                <foreach collection="idList" item="id" open="(" separator="," close=")">#{id}</foreach>
            </if>
        </where>
    </sql>

    <insert id="insert" parameterType="com.tianyi.helmet.server.entity.file.Tag" useGeneratedKeys="true"
            keyProperty="id">
        insert ignore into t_tag (
        <include refid="Base_Column_List_NoId"/>
        )
        values (
        #{createTime},#{tagName},#{groupId}
        )
    </insert>

    <select id="selectByGroupId" parameterType="int" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_tag
        where groupId = #{groupId}
        order by createTime desc
        <include refid="core.page"/>
    </select>

    <select id="listBy" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_tag
        <include refid="conditions"/>
        order by createTime desc
        <include refid="core.page"/>
    </select>

    <select id="countBy" parameterType="map" resultType="int">
        select count(id)
        from t_tag
        <include refid="conditions"/>
    </select>

    <select id="selectById" parameterType="int" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_tag
        where id = #{id}
    </select>

    <select id="selectByTagName" parameterType="string" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_tag
        where tagName = #{tagName}
        limit 0,1
    </select>


    <update id="updateById" parameterType="com.tianyi.helmet.server.entity.file.Tag">
		update t_tag
		  set tagName = #{tagName},
			  groupId = #{groupId}
		where id = #{id}
	</update>

    <update id="updateNameById" parameterType="map">
		update t_tag
		set tagName = #{tagName}
		where id = #{id}
	</update>

    <update id="updateGroupIdById" parameterType="map">
		update t_tag
		set groupId = #{groupId}
		where id = #{id}
	</update>

    <update id="updateGroupIdByOldGroupId" parameterType="map">
        update t_tag
        set groupId = #{groupId}
        where groupId = #{oldGroupId}
    </update>

    <delete id="deleteById" parameterType="int">
		delete from t_tag where id = #{id}
	</delete>

</mapper>