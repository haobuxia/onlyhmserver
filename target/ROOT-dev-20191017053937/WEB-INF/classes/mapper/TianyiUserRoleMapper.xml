<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianyi.helmet.server.dao.client.TianyiUserRoleDao">

	<resultMap id="BaseResultMap" type="com.tianyi.helmet.server.entity.client.TianyiUserRole">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="userId" property="userId" jdbcType="INTEGER" />
		<result column="roleCode" property="roleCode" jdbcType="VARCHAR" />
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="Base_Column_List">
		id, userId,roleCode,createTime
	</sql>

	<sql id="Base_Column_List_NoId">
		 userId,roleCode,createTime
	</sql>

	<sql id="conditions">
		<where>
			<if test="userId != null ">
				and userId = #{userId,jdbcType=INTEGER}
			</if>
			<if test="roleCode != null and roleCode != '' ">
				and roleCode = #{roleCode,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null ">
				and createTime = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="regTime1 != null ">
				and createTime &gt;= #{createTime1,jdbcType=TIMESTAMP}
			</if>
			<if test="regTime2 != null ">
				and createTime &lt;= #{createTime2,jdbcType=TIMESTAMP}
			</if>
		</where>
	</sql>

	<insert id="insert" parameterType="com.tianyi.helmet.server.entity.client.TianyiUserRole" useGeneratedKeys="true" keyProperty="id">
		insert ignore into t_tianyi_userrole (
			<include refid="Base_Column_List_NoId" />
		)
		values (
			#{userId},#{roleCode},#{createTime}
		)
	</insert>

	<select id="listBy" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_tianyi_userrole
		<include refid="conditions"/>
		order by createTime desc
		<include refid="core.page"/>
	</select>

	<select id="countBy" parameterType="map" resultType="int">
		 select count(id)
		 from t_tianyi_userrole
		<include refid="conditions"/>
	</select>

	<select id="selectById" parameterType="int" resultMap="BaseResultMap">
		select
		 <include refid="Base_Column_List" />
		from t_tianyi_userrole
		 where id = #{id}
	</select>

	<select id="selectByUserId" parameterType="int" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_tianyi_userrole
		where userId = #{userId}
	</select>

	<select id="selectByRoleCode" parameterType="string" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_tianyi_userrole
		where roleCode = #{roleCode}
	</select>

	<delete id="deleteById" parameterType="int">
		  delete from t_tianyi_userrole where id = #{id}
	</delete>

	<delete id="deleteByUserId" parameterType="int">
		delete from t_tianyi_userrole where userId = #{userId}
	</delete>

	<delete id="deleteByUserIdRoleCode" parameterType="map">
		delete from t_tianyi_userrole
		where userId = #{userId} and roleCode = #{roleCode}
	</delete>

</mapper>